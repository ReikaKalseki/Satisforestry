// Date: 31/12/2020 7:30:06 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.Satisforestry.Render;

import java.util.ArrayList;

import org.lwjgl.opengl.GL11;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

import Reika.Satisforestry.Entity.EntityFlyingManta;

public class ModelFlyingManta extends ModelBase
{
	//fields
	ModelPart Body2;
	ModelPart Tail;
	ModelPart BodyRidge;
	ModelPart Bulge2b;
	ModelPart Bulge3;
	ModelPart Bulge1;
	ModelPart Nose2;
	ModelPart Bulge2;
	ModelPart Nose;

	ModelPart HangingFin10;
	ModelPart HangingFin2;
	ModelPart HangingFin3;
	ModelPart HangingFin4;
	ModelPart HangingFin5;
	ModelPart HangingFin6;
	ModelPart HangingFin7;
	ModelPart HangingFin8;
	ModelPart HangingFin9;
	ModelPart HangingFin1;

	ModelPart UnderRidge;
	ModelPart Feather3;
	ModelPart Feather1;
	ModelPart Feather4;
	ModelPart Feather6;
	ModelPart Feather2;
	ModelPart Feather5;

	ModelPart LeftWing30;
	ModelPart LeftWing1;
	ModelPart LeftWing2;
	ModelPart LeftWing3;
	ModelPart LeftWing4;
	ModelPart LeftWing5;
	ModelPart LeftWing6;
	ModelPart LeftWing6b;
	ModelPart LeftWing7;
	ModelPart LeftWing8;
	ModelPart LeftWing9;
	ModelPart LeftWing10;
	ModelPart LeftWing11;
	ModelPart LeftWing12;
	ModelPart LeftWing13;
	ModelPart LeftWing14;
	ModelPart LeftWing15;
	ModelPart LeftWing16;
	ModelPart LeftWing17;
	ModelPart LeftWing18;
	ModelPart LeftWing19;
	ModelPart LeftWing20;
	ModelPart LeftWing21;
	ModelPart LeftWing22;
	ModelPart LeftWing23;
	ModelPart LeftWing24;
	ModelPart LeftWing25;
	ModelPart LeftWing26;
	ModelPart LeftWing27;
	ModelPart LeftWing28;
	ModelPart LeftWing29;

	private final ArrayList<ModelPart> allParts = new ArrayList();
	private final ArrayList<ModelPart> mirroredParts = new ArrayList();
	private final ArrayList<ModelPart> wingParts = new ArrayList();
	private final ArrayList<ModelPart> finParts = new ArrayList();

	private boolean isFin = false;
	private boolean isMirror = false;
	private boolean isWing = false;

	public ModelFlyingManta() {
		textureWidth = 256;
		textureHeight = 128;

		Body2 = new ModelPart(this, 110, 0);
		Body2.addBox(42F, -2F, -2F, 16, 4, 4);
		Body2.setRotationPoint(0F, 8F, 0F);
		Body2.setTextureSize(256, 128);
		Body2.mirror = true;
		this.initializePart(Body2, 0F, 0F, 0F);
		Tail = new ModelPart(this, 155, 0);
		Tail.addBox(58F, -1.5F, -1F, 16, 3, 2);
		Tail.setRotationPoint(0F, 8F, 0F);
		Tail.setTextureSize(256, 128);
		Tail.mirror = true;
		this.initializePart(Tail, 0F, 0F, 0F);
		BodyRidge = new ModelPart(this, 0, 0);
		BodyRidge.addBox(-6F, -2.5F, -2.5F, 48, 5, 5);
		BodyRidge.setRotationPoint(0F, 8F, 0F);
		BodyRidge.setTextureSize(256, 128);
		BodyRidge.mirror = true;
		this.initializePart(BodyRidge, 0F, 0F, 0F);
		Bulge2b = new ModelPart(this, 192, 0);
		Bulge2b.addBox(-1.5F, -3F, -4F, 14, 3, 8);
		Bulge2b.setRotationPoint(0F, 8F, 0F);
		Bulge2b.setTextureSize(256, 128);
		Bulge2b.mirror = true;
		this.initializePart(Bulge2b, 0F, 0F, 0F);
		Bulge3 = new ModelPart(this, 192, 24);
		Bulge3.addBox(-1.5F, -4.5F, -1.5F, 14, 1, 3);
		Bulge3.setRotationPoint(0F, 8F, 0F);
		Bulge3.setTextureSize(256, 128);
		Bulge3.mirror = true;
		this.initializePart(Bulge3, 0F, 0F, 0F);
		Bulge1 = new ModelPart(this, 192, 12);
		Bulge1.addBox(-4F, -3.5F, -2F, 19, 3, 4);
		Bulge1.setRotationPoint(0F, 8F, 0F);
		Bulge1.setTextureSize(256, 128);
		Bulge1.mirror = true;
		this.initializePart(Bulge1, 0F, 0F, 0F);
		Nose2 = new ModelPart(this, 240, 0);
		Nose2.addBox(-7F, -1.5F, -2F, 2, 4, 4);
		Nose2.setRotationPoint(0F, 8F, 0F);
		Nose2.setTextureSize(256, 128);
		Nose2.mirror = true;
		this.initializePart(Nose2, 0F, 0F, 0F);
		Bulge2 = new ModelPart(this, 192, 36);
		Bulge2.addBox(-3F, -3.4F, -3F, 17, 3, 6);
		Bulge2.setRotationPoint(0F, 8F, 0F);
		Bulge2.setTextureSize(256, 128);
		Bulge2.mirror = true;
		this.initializePart(Bulge2, 0F, 0F, 0F);
		Nose = new ModelPart(this, 240, 12);
		Nose.addBox(-8F, 0F, -1F, 1, 2, 2);
		Nose.setRotationPoint(0F, 8F, 0F);
		Nose.setTextureSize(256, 128);
		Nose.mirror = true;
		this.initializePart(Nose, 0F, 0F, 0F);

		isFin = true;

		HangingFin10 = new ModelPart(this, 138, 102);
		HangingFin10.addBox(15F, 20F, -1F, 4, 2, 2);
		HangingFin10.setRotationPoint(0F, 8F, 0F);
		HangingFin10.setTextureSize(256, 128);
		HangingFin10.mirror = true;
		this.initializePart(HangingFin10, 0F, 0F, 0F);
		Feather3 = new ModelPart(this, 123, 118);
		Feather3.addBox(-3F, -7F, 3F, 5, 1, 1);
		Feather3.setRotationPoint(0F, 8F, 0F);
		Feather3.setTextureSize(256, 128);
		Feather3.mirror = true;
		this.initializePart(Feather3, -0.2094395F, 0F, 0F);
		HangingFin2 = new ModelPart(this, 138, 45);
		HangingFin2.addBox(-3F, 4F, -1F, 19, 2, 2);
		HangingFin2.setRotationPoint(0F, 8F, 0F);
		HangingFin2.setTextureSize(256, 128);
		HangingFin2.mirror = true;
		this.initializePart(HangingFin2, 0F, 0F, 0F);
		HangingFin3 = new ModelPart(this, 138, 52);
		HangingFin3.addBox(-1F, 6F, -1F, 16, 2, 2);
		HangingFin3.setRotationPoint(0F, 8F, 0F);
		HangingFin3.setTextureSize(256, 128);
		HangingFin3.mirror = true;
		this.initializePart(HangingFin3, 0F, 0F, 0F);
		HangingFin4 = new ModelPart(this, 138, 59);
		HangingFin4.addBox(1F, 8F, -1F, 14, 2, 2);
		HangingFin4.setRotationPoint(0F, 8F, 0F);
		HangingFin4.setTextureSize(256, 128);
		HangingFin4.mirror = true;
		this.initializePart(HangingFin4, 0F, 0F, 0F);
		HangingFin5 = new ModelPart(this, 138, 66);
		HangingFin5.addBox(3F, 10F, -1F, 13, 2, 2);
		HangingFin5.setRotationPoint(0F, 8F, 0F);
		HangingFin5.setTextureSize(256, 128);
		HangingFin5.mirror = true;
		this.initializePart(HangingFin5, 0F, 0F, 0F);
		HangingFin6 = new ModelPart(this, 138, 74);
		HangingFin6.addBox(5F, 12F, -1F, 12, 2, 2);
		HangingFin6.setRotationPoint(0F, 8F, 0F);
		HangingFin6.setTextureSize(256, 128);
		HangingFin6.mirror = true;
		this.initializePart(HangingFin6, 0F, 0F, 0F);
		HangingFin7 = new ModelPart(this, 138, 81);
		HangingFin7.addBox(8F, 14F, -1F, 10, 2, 2);
		HangingFin7.setRotationPoint(0F, 8F, 0F);
		HangingFin7.setTextureSize(256, 128);
		HangingFin7.mirror = true;
		this.initializePart(HangingFin7, 0F, 0F, 0F);
		HangingFin8 = new ModelPart(this, 138, 88);
		HangingFin8.addBox(11F, 16F, -1F, 8, 2, 2);
		HangingFin8.setRotationPoint(0F, 8F, 0F);
		HangingFin8.setTextureSize(256, 128);
		HangingFin8.mirror = true;
		this.initializePart(HangingFin8, 0F, 0F, 0F);
		HangingFin9 = new ModelPart(this, 138, 95);
		HangingFin9.addBox(13F, 18F, -1F, 6, 2, 2);
		HangingFin9.setRotationPoint(0F, 8F, 0F);
		HangingFin9.setTextureSize(256, 128);
		HangingFin9.mirror = true;
		this.initializePart(HangingFin9, 0F, 0F, 0F);
		HangingFin1 = new ModelPart(this, 138, 37);
		HangingFin1.addBox(-4F, 0F, -1F, 21, 4, 2);
		HangingFin1.setRotationPoint(0F, 8F, 0F);
		HangingFin1.setTextureSize(256, 128);
		HangingFin1.mirror = true;
		this.initializePart(HangingFin1, 0F, 0F, 0F);

		isFin = false;
		isMirror = true;

		UnderRidge = new ModelPart(this, 68, 110);
		UnderRidge.addBox(-2F, 0F, 3.2F, 64, 5, 1);
		UnderRidge.setRotationPoint(0F, 8F, 0F);
		UnderRidge.setTextureSize(256, 128);
		UnderRidge.mirror = true;
		this.initializePart(UnderRidge, 0F, 0.0349066F, 0F);
		Feather1 = new ModelPart(this, 96, 118);
		Feather1.addBox(-4F, -5F, 3F, 2, 4, 1);
		Feather1.setRotationPoint(0F, 8F, 0F);
		Feather1.setTextureSize(256, 128);
		Feather1.mirror = true;
		this.initializePart(Feather1, -0.2094395F, 0F, 0F);
		Feather4 = new ModelPart(this, 110, 123);
		Feather4.addBox(-1F, -8F, 3F, 2, 1, 1);
		Feather4.setRotationPoint(0F, 8F, 0F);
		Feather4.setTextureSize(256, 128);
		Feather4.mirror = true;
		this.initializePart(Feather4, -0.2094395F, 0F, 0F);
		Feather6 = new ModelPart(this, 106, 118);
		Feather6.addBox(12F, -8F, 3F, 6, 1, 1);
		Feather6.setRotationPoint(0F, 8F, 0F);
		Feather6.setTextureSize(256, 128);
		Feather6.mirror = true;
		this.initializePart(Feather6, -0.2094395F, 0F, 0F);
		Feather2 = new ModelPart(this, 96, 124);
		Feather2.addBox(-4F, -6F, 3F, 5, 1, 1);
		Feather2.setRotationPoint(0F, 8F, 0F);
		Feather2.setTextureSize(256, 128);
		Feather2.mirror = true;
		this.initializePart(Feather2, -0.2094395F, 0F, 0F);
		Feather5 = new ModelPart(this, 137, 118);
		Feather5.addBox(1F, -9F, 3F, 11, 2, 1);
		Feather5.setRotationPoint(0F, 8F, 0F);
		Feather5.setTextureSize(256, 128);
		Feather5.mirror = true;
		this.initializePart(Feather5, -0.2094395F, 0F, 0F);

		isMirror = false;
		isWing = true;

		LeftWing30 = new ModelPart(this, 60, 120);
		LeftWing30.addBox(25F, -1F, 61F, 10, 2, 2);
		LeftWing30.setRotationPoint(0F, 8F, 0F);
		LeftWing30.setTextureSize(256, 128);
		LeftWing30.mirror = true;
		this.initializePart(LeftWing30, 0F, 0F, 0F);
		LeftWing1 = new ModelPart(this, 0, 12);
		LeftWing1.addBox(-5F, -1F, 1F, 78, 2, 2);
		LeftWing1.setRotationPoint(0F, 8F, 0F);
		LeftWing1.setTextureSize(256, 128);
		LeftWing1.mirror = true;
		this.initializePart(LeftWing1, 0F, 0F, 0F);
		LeftWing2 = new ModelPart(this, 0, 16);
		LeftWing2.addBox(-5F, -1F, 3F, 76, 2, 2);
		LeftWing2.setRotationPoint(0F, 8F, 0F);
		LeftWing2.setTextureSize(256, 128);
		LeftWing2.mirror = true;
		this.initializePart(LeftWing2, 0F, 0F, 0F);
		LeftWing3 = new ModelPart(this, 0, 20);
		LeftWing3.addBox(-5F, -1F, 5F, 74, 2, 2);
		LeftWing3.setRotationPoint(0F, 8F, 0F);
		LeftWing3.setTextureSize(256, 128);
		LeftWing3.mirror = true;
		this.initializePart(LeftWing3, 0F, 0F, 0F);
		LeftWing4 = new ModelPart(this, 0, 24);
		LeftWing4.addBox(-5F, -1F, 7F, 72, 2, 2);
		LeftWing4.setRotationPoint(0F, 8F, 0F);
		LeftWing4.setTextureSize(256, 128);
		LeftWing4.mirror = true;
		this.initializePart(LeftWing4, 0F, 0F, 0F);
		LeftWing5 = new ModelPart(this, 0, 28);
		LeftWing5.addBox(-4F, -1F, 9F, 69, 2, 2);
		LeftWing5.setRotationPoint(0F, 8F, 0F);
		LeftWing5.setTextureSize(256, 128);
		LeftWing5.mirror = true;
		this.initializePart(LeftWing5, 0F, 0F, 0F);
		LeftWing6 = new ModelPart(this, 0, 32);
		LeftWing6.addBox(-4F, -1F, 11F, 67, 2, 2);
		LeftWing6.setRotationPoint(0F, 8F, 0F);
		LeftWing6.setTextureSize(256, 128);
		LeftWing6.mirror = true;
		this.initializePart(LeftWing6, 0F, 0F, 0F);
		LeftWing6b = new ModelPart(this, 0, 36);
		LeftWing6b.addBox(-4F, -1F, 13F, 65, 2, 2);
		LeftWing6b.setRotationPoint(0F, 8F, 0F);
		LeftWing6b.setTextureSize(256, 128);
		LeftWing6b.mirror = true;
		this.initializePart(LeftWing6b, 0F, 0F, 0F);
		LeftWing7 = new ModelPart(this, 0, 40);
		LeftWing7.addBox(-4F, -1F, 15F, 63, 2, 2);
		LeftWing7.setRotationPoint(0F, 8F, 0F);
		LeftWing7.setTextureSize(256, 128);
		LeftWing7.mirror = true;
		this.initializePart(LeftWing7, 0F, 0F, 0F);
		LeftWing8 = new ModelPart(this, 0, 44);
		LeftWing8.addBox(-3F, -1F, 17F, 60, 2, 2);
		LeftWing8.setRotationPoint(0F, 8F, 0F);
		LeftWing8.setTextureSize(256, 128);
		LeftWing8.mirror = true;
		this.initializePart(LeftWing8, 0F, 0F, 0F);
		LeftWing9 = new ModelPart(this, 0, 48);
		LeftWing9.addBox(-3F, -1F, 19F, 59, 2, 2);
		LeftWing9.setRotationPoint(0F, 8F, 0F);
		LeftWing9.setTextureSize(256, 128);
		LeftWing9.mirror = true;
		this.initializePart(LeftWing9, 0F, 0F, 0F);
		LeftWing10 = new ModelPart(this, 0, 52);
		LeftWing10.addBox(-3F, -1F, 21F, 57, 2, 2);
		LeftWing10.setRotationPoint(0F, 8F, 0F);
		LeftWing10.setTextureSize(256, 128);
		LeftWing10.mirror = true;
		this.initializePart(LeftWing10, 0F, 0F, 0F);
		LeftWing11 = new ModelPart(this, 0, 56);
		LeftWing11.addBox(-2F, -1F, 23F, 55, 2, 2);
		LeftWing11.setRotationPoint(0F, 8F, 0F);
		LeftWing11.setTextureSize(256, 128);
		LeftWing11.mirror = true;
		this.initializePart(LeftWing11, 0F, 0F, 0F);
		LeftWing12 = new ModelPart(this, 0, 60);
		LeftWing12.addBox(-2F, -1F, 25F, 54, 2, 2);
		LeftWing12.setRotationPoint(0F, 8F, 0F);
		LeftWing12.setTextureSize(256, 128);
		LeftWing12.mirror = true;
		this.initializePart(LeftWing12, 0F, 0F, 0F);
		LeftWing13 = new ModelPart(this, 0, 64);
		LeftWing13.addBox(-1F, -1F, 27F, 52, 2, 2);
		LeftWing13.setRotationPoint(0F, 8F, 0F);
		LeftWing13.setTextureSize(256, 128);
		LeftWing13.mirror = true;
		this.initializePart(LeftWing13, 0F, 0F, 0F);
		LeftWing14 = new ModelPart(this, 0, 68);
		LeftWing14.addBox(-1F, -1F, 29F, 51, 2, 2);
		LeftWing14.setRotationPoint(0F, 8F, 0F);
		LeftWing14.setTextureSize(256, 128);
		LeftWing14.mirror = true;
		this.initializePart(LeftWing14, 0F, 0F, 0F);
		LeftWing15 = new ModelPart(this, 0, 72);
		LeftWing15.addBox(0F, -1F, 31F, 49, 2, 2);
		LeftWing15.setRotationPoint(0F, 8F, 0F);
		LeftWing15.setTextureSize(256, 128);
		LeftWing15.mirror = true;
		this.initializePart(LeftWing15, 0F, 0F, 0F);
		LeftWing16 = new ModelPart(this, 0, 76);
		LeftWing16.addBox(1F, -1F, 33F, 47, 2, 2);
		LeftWing16.setRotationPoint(0F, 8F, 0F);
		LeftWing16.setTextureSize(256, 128);
		LeftWing16.mirror = true;
		this.initializePart(LeftWing16, 0F, 0F, 0F);
		LeftWing17 = new ModelPart(this, 0, 80);
		LeftWing17.addBox(2F, -1F, 35F, 45, 2, 2);
		LeftWing17.setRotationPoint(0F, 8F, 0F);
		LeftWing17.setTextureSize(256, 128);
		LeftWing17.mirror = true;
		this.initializePart(LeftWing17, 0F, 0F, 0F);
		LeftWing18 = new ModelPart(this, 0, 84);
		LeftWing18.addBox(3F, -1F, 37F, 43, 2, 2);
		LeftWing18.setRotationPoint(0F, 8F, 0F);
		LeftWing18.setTextureSize(256, 128);
		LeftWing18.mirror = true;
		this.initializePart(LeftWing18, 0F, 0F, 0F);
		LeftWing19 = new ModelPart(this, 0, 88);
		LeftWing19.addBox(4F, -1F, 39F, 41, 2, 2);
		LeftWing19.setRotationPoint(0F, 8F, 0F);
		LeftWing19.setTextureSize(256, 128);
		LeftWing19.mirror = true;
		this.initializePart(LeftWing19, 0F, 0F, 0F);
		LeftWing20 = new ModelPart(this, 0, 92);
		LeftWing20.addBox(5F, -1F, 41F, 39, 2, 2);
		LeftWing20.setRotationPoint(0F, 8F, 0F);
		LeftWing20.setTextureSize(256, 128);
		LeftWing20.mirror = true;
		this.initializePart(LeftWing20, 0F, 0F, 0F);
		LeftWing21 = new ModelPart(this, 0, 96);
		LeftWing21.addBox(7F, -1F, 43F, 36, 2, 2);
		LeftWing21.setRotationPoint(0F, 8F, 0F);
		LeftWing21.setTextureSize(256, 128);
		LeftWing21.mirror = true;
		this.initializePart(LeftWing21, 0F, 0F, 0F);
		LeftWing22 = new ModelPart(this, 0, 100);
		LeftWing22.addBox(9F, -1F, 45F, 33, 2, 2);
		LeftWing22.setRotationPoint(0F, 8F, 0F);
		LeftWing22.setTextureSize(256, 128);
		LeftWing22.mirror = true;
		this.initializePart(LeftWing22, 0F, 0F, 0F);
		LeftWing23 = new ModelPart(this, 0, 104);
		LeftWing23.addBox(11F, -1F, 47F, 30, 2, 2);
		LeftWing23.setRotationPoint(0F, 8F, 0F);
		LeftWing23.setTextureSize(256, 128);
		LeftWing23.mirror = true;
		this.initializePart(LeftWing23, 0F, 0F, 0F);
		LeftWing24 = new ModelPart(this, 0, 108);
		LeftWing24.addBox(13F, -1F, 49F, 27, 2, 2);
		LeftWing24.setRotationPoint(0F, 8F, 0F);
		LeftWing24.setTextureSize(256, 128);
		LeftWing24.mirror = true;
		this.initializePart(LeftWing24, 0F, 0F, 0F);
		LeftWing25 = new ModelPart(this, 0, 112);
		LeftWing25.addBox(15F, -1F, 51F, 25, 2, 2);
		LeftWing25.setRotationPoint(0F, 8F, 0F);
		LeftWing25.setTextureSize(256, 128);
		LeftWing25.mirror = true;
		this.initializePart(LeftWing25, 0F, 0F, 0F);
		LeftWing26 = new ModelPart(this, 0, 116);
		LeftWing26.addBox(17F, -1F, 53F, 22, 2, 2);
		LeftWing26.setRotationPoint(0F, 8F, 0F);
		LeftWing26.setTextureSize(256, 128);
		LeftWing26.mirror = true;
		this.initializePart(LeftWing26, 0F, 0F, 0F);
		LeftWing27 = new ModelPart(this, 0, 120);
		LeftWing27.addBox(19F, -1F, 55F, 20, 2, 2);
		LeftWing27.setRotationPoint(0F, 8F, 0F);
		LeftWing27.setTextureSize(256, 128);
		LeftWing27.mirror = true;
		this.initializePart(LeftWing27, 0F, 0F, 0F);
		LeftWing28 = new ModelPart(this, 0, 124);
		LeftWing28.addBox(21F, -1F, 57F, 17, 2, 2);
		LeftWing28.setRotationPoint(0F, 8F, 0F);
		LeftWing28.setTextureSize(256, 128);
		LeftWing28.mirror = true;
		this.initializePart(LeftWing28, 0F, 0F, 0F);
		LeftWing29 = new ModelPart(this, 60, 124);
		LeftWing29.addBox(23F, -1F, 59F, 14, 2, 2);
		LeftWing29.setRotationPoint(0F, 8F, 0F);
		LeftWing29.setTextureSize(256, 128);
		LeftWing29.mirror = true;
		this.initializePart(LeftWing29, 0F, 0F, 0F);

		for (ModelPart p : allParts) {
			p.offsetX = -2;
		}
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		GL11.glPushMatrix();
		GL11.glRotated(f4, 0, 0, 1);
		Body2.render(f5);
		Tail.render(f5);
		BodyRidge.render(f5);
		Bulge2b.render(f5);
		Bulge3.render(f5);
		Bulge1.render(f5);
		Nose2.render(f5);
		Bulge2.render(f5);
		Nose.render(f5);

		for (ModelPart p : mirroredParts) {
			p.render(f5);
			p.offsetZ = -p.rootZ/8;
			p.rotateAngleX = -p.rotateAngleX;
			p.rotateAngleY = -p.rotateAngleY;
			p.rotateAngleZ = -p.rotateAngleZ;
			if (p == UnderRidge)
				p.offsetZ -= 0.0625;
			p.render(f5);
			p.offsetZ = 0;
			p.rotateAngleX = -p.rotateAngleX;
			p.rotateAngleY = -p.rotateAngleY;
			p.rotateAngleZ = -p.rotateAngleZ;
		}

		/*
		UnderRidge.render(f5);
		Feather3.render(f5);
		Feather1.render(f5);
		Feather4.render(f5);
		Feather6.render(f5);
		Feather2.render(f5);
		Feather5.render(f5);
		 */

		for (ModelPart p : finParts) {
			p.render(f5);
		}

		double t0 = System.currentTimeMillis()/750D;
		for (ModelPart p : wingParts) {
			double o = p.rootZ-1;
			double t = t0+o*0.015;
			double ft = o/70D;
			p.offsetY = (float)(((EntityFlyingManta)entity).getWingDeflection()*ft*Math.sin(t));
			p.render(f5);

			p.offsetZ = -p.rootZ/8;
			p.render(f5);
			p.offsetZ = 0;
		}

		/*
		LeftWing30.render(f5);
		LeftWing1.render(f5);
		LeftWing2.render(f5);
		LeftWing3.render(f5);
		LeftWing4.render(f5);
		LeftWing5.render(f5);
		LeftWing6.render(f5);
		LeftWing6b.render(f5);
		LeftWing7.render(f5);
		LeftWing8.render(f5);
		LeftWing9.render(f5);
		LeftWing10.render(f5);
		LeftWing11.render(f5);
		LeftWing12.render(f5);
		LeftWing13.render(f5);
		LeftWing14.render(f5);
		LeftWing15.render(f5);
		LeftWing16.render(f5);
		LeftWing17.render(f5);
		LeftWing18.render(f5);
		LeftWing19.render(f5);
		LeftWing20.render(f5);
		LeftWing21.render(f5);
		LeftWing22.render(f5);
		LeftWing23.render(f5);
		LeftWing24.render(f5);
		LeftWing25.render(f5);
		LeftWing26.render(f5);
		LeftWing27.render(f5);
		LeftWing28.render(f5);
		LeftWing29.render(f5);
		 */
		GL11.glPopMatrix();
	}

	private void initializePart(ModelPart model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
		allParts.add(model);
		if (isWing) {
			wingParts.add(model);
		}
		if (isMirror) {
			mirroredParts.add(model);
		}
		if (isFin) {
			finParts.add(model);
		}
	}

	private static class ModelPart extends ModelRenderer {

		private float rootX;
		private float rootY;
		private float rootZ;

		public ModelPart(ModelBase model, int tx, int ty) {
			super(model, tx, ty);
		}

		@Override
		public ModelRenderer addBox(float x, float y, float z, int sx, int sy, int sz) {
			rootX = x;
			rootY = y;
			rootZ = z;
			return super.addBox(x, y, z, sx, sy, sz);
		}

	}

}
